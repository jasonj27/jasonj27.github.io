[{"categories":["CS50"],"content":"Filter #include \"helpers.h\"#include \u003cmath.h\u003e#include \u003cstring.h\u003e // Convert image to grayscale void grayscale(int height, int width, RGBTRIPLE image[height][width]) { for (int i = 0; i \u003c height; i++) { for (int j = 0; j \u003c width; j++) { float pixel = (float)(image[i][j].rgbtRed + image[i][j].rgbtGreen + image[i][j].rgbtBlue) / 3; pixel = roundf(pixel); image[i][j].rgbtRed = pixel; image[i][j].rgbtGreen = pixel; image[i][j].rgbtBlue = pixel; } } return; } // Reflect image horizontally void reflect(int height, int width, RGBTRIPLE image[height][width]) { for (int i = 0; i \u003c height; i++) { RGBTRIPLE aux[width]; memcpy(aux, image[i], sizeof(RGBTRIPLE) * width); for (int j = 0; j \u003c width; j++) { image[i][j].rgbtRed = aux[width - j - 1].rgbtRed; image[i][j].rgbtGreen = aux[width - j - 1].rgbtGreen; image[i][j].rgbtBlue = aux[width - j - 1].rgbtBlue; } } return; } // Blur image void blur(int height, int width, RGBTRIPLE image[height][width]) { RGBTRIPLE aux[height][width]; memcpy(aux, image, sizeof(RGBTRIPLE) * height * width); for (int i = 0; i \u003c height; i++) { for (int j = 0; j \u003c width; j++) { int r = 0, g = 0, b = 0; float pixel_count = 0; for (int k = -1; k \u003c 2; k++) { for (int l = -1; l \u003c 2; l++) { if (!(i + k \u003c 0 || i + k \u003e= height || j + l \u003c 0 || j + l \u003e= width)) { r += aux[i + k][j + l].rgbtRed; g += aux[i + k][j + l].rgbtGreen; b += aux[i + k][j + l].rgbtBlue; pixel_count++; } } } float pixel_blur_r = roundf((float)r / pixel_count); float pixel_blur_g = roundf((float)g / pixel_count); float pixel_blur_b = roundf((float)b / pixel_count); image[i][j].rgbtRed = pixel_blur_r; image[i][j].rgbtGreen = pixel_blur_g; image[i][j].rgbtBlue = pixel_blur_b; } } return; } // Detect edges void edges(int height, int width, RGBTRIPLE image[height][width]) { RGBTRIPLE aux[height][width]; memcpy(aux, image, sizeof(RGBTRIPLE) * height * width); int g_x[3][3] = { {-1, 0, 1}, {-2, 0, 2}, {-1, 0, 1} }; int g_y[3][3] = { {-1, -2, -1}, {0, 0, 0}, {1, 2, 1} }; for (int i = 0; i \u003c height; i++) { for (int j = 0; j \u003c width; j++) { int rx = 0, gx = 0, bx = 0; int ry = 0, gy = 0, by = 0; for (int k = -1; k \u003c 2; k++) { for (int l = -1; l \u003c 2; l++) { if (!(i + k \u003c 0 || i + k \u003e= height || j + l \u003c 0 || j + l \u003e= width)) { rx += aux[i + k][j + l].rgbtRed * g_x[k + 1][l + 1]; gx += aux[i + k][j + l].rgbtGreen * g_x[k + 1][l + 1]; bx += aux[i + k][j + l].rgbtBlue * g_x[k + 1][l + 1]; ry += aux[i + k][j + l].rgbtRed * g_y[k + 1][l + 1]; gy += aux[i + k][j + l].rgbtGreen * g_y[k + 1][l + 1]; by += aux[i + k][j + l].rgbtBlue * g_y[k + 1][l + 1]; } } } float r = roundf(sqrt((float)(rx * rx + ry * ry))); float g = roundf(sqrt((float)(gx * gx + gy * gy))); float b = roundf(sqrt((float)(bx * bx + by * by))); r = r \u003e 255 ? 255 : r; g = g \u003e 255 ? 255 : g; b = b \u003e 255 ? 255 : b; image[i][j].rgbtRed = r; image[i][j].rgbtGreen = g; image[i][j].rgbtBlue = b; } } return; } ","date":"2020-10-05","objectID":"/2020/10/05/cs50-week4/:1:0","tags":["C","CS50"],"title":"CS50 2020 Week4: Memery Problem Answers","uri":"/2020/10/05/cs50-week4/"},{"categories":["CS50"],"content":"Recovery #include \u003cstdio.h\u003e#include \u003cstdlib.h\u003e#include \u003cstdint.h\u003e typedef uint8_t BYTE; int main(int argc, char *argv[]) { BYTE buffer[512]; char filename[8]; int n = 0; FILE *img; if (argc != 2) { printf(\"Usage: ./recover image\\n\"); return 1; } FILE *f = fopen(argv[1], \"r\"); if (!f) { printf(\"Error open file\\n\"); return 1; } // loop for read file while (1) { // Read 512 bytes into a buffer int bytesread = fread(buffer, sizeof(BYTE), 512, f); // if start a new JPEG if (buffer[0] == 0xff \u0026\u0026 buffer[1] == 0xd8 \u0026\u0026 buffer[2] == 0xff \u0026\u0026 (buffer[3] \u0026 0xf0) == 0xe0) { if (n == 0) // If first JPEG { sprintf(filename, \"%03i.jpg\", n); n++; img = fopen(filename, \"w\"); fwrite(buffer, sizeof(BYTE), bytesread, img); } else // not first JPEG { fclose(img); sprintf(filename, \"%03i.jpg\", n); n++; img = fopen(filename, \"w\"); fwrite(buffer, sizeof(BYTE), bytesread, img); } } else { if (n != 0) // If already found JPEG { fwrite(buffer, sizeof(BYTE), bytesread, img); } } // which means file end, fread read only size of bytesread if (bytesread != 512) { // write last read to file fwrite(buffer, sizeof(BYTE), bytesread, img); fclose(img); break; } } fclose(f); return 0; } ","date":"2020-10-05","objectID":"/2020/10/05/cs50-week4/:2:0","tags":["C","CS50"],"title":"CS50 2020 Week4: Memery Problem Answers","uri":"/2020/10/05/cs50-week4/"},{"categories":["CS50"],"content":"Plurality #include \u003ccs50.h\u003e#include \u003cstdio.h\u003e#include \u003cstring.h\u003e // Max number of candidates #define MAX 9 // Candidates have name and vote count typedef struct { string name; int votes; } candidate; // Array of candidates candidate candidates[MAX]; // Number of candidates int candidate_count; // Function prototypes bool vote(string name); void print_winner(void); int main(int argc, string argv[]) { // Check for invalid usage if (argc \u003c 2) { printf(\"Usage: plurality [candidate ...]\\n\"); return 1; } // Populate array of candidates candidate_count = argc - 1; if (candidate_count \u003e MAX) { printf(\"Maximum number of candidates is %i\\n\", MAX); return 2; } for (int i = 0; i \u003c candidate_count; i++) { candidates[i].name = argv[i + 1]; candidates[i].votes = 0; } int voter_count = get_int(\"Number of voters: \"); // Loop over all voters for (int i = 0; i \u003c voter_count; i++) { string name = get_string(\"Vote: \"); // Check for invalid vote if (!vote(name)) { printf(\"Invalid vote.\\n\"); } } // Display winner of election print_winner(); } // Update vote totals given a new vote bool vote(string name) { for (int i = 0; i \u003c candidate_count; i++) { if (strcmp(candidates[i].name, name) == 0) { candidates[i].votes++; return true; } } return false; } // Print the winner (or winners) of the election void print_winner(void) { for (int i = 0; i \u003c candidate_count; i++) { for (int j = 1; j \u003c (candidate_count - i); j++) { if (candidates[i].votes \u003c candidates[i + j].votes) { candidates[i].votes = 0; } else if (candidates[i].votes \u003e candidates[i + j].votes) { candidates[i + j].votes = 0; } } } for (int i = 0; i \u003c candidate_count; i++) { if (candidates[i].votes != 0) { printf(\"%s\\n\", candidates[i].name); } } return; } ","date":"2020-10-03","objectID":"/2020/10/03/cs50-week3/:1:0","tags":["C","CS50"],"title":"CS50 2020 Week3: Algorithms Problem Answers","uri":"/2020/10/03/cs50-week3/"},{"categories":["CS50"],"content":"Tideman #include \u003ccs50.h\u003e#include \u003cstdio.h\u003e#include \u003cstring.h\u003e // Max number of candidates #define MAX 9 // preferences[i][j] is number of voters who prefer i over j int preferences[MAX][MAX]; // locked[i][j] means i is locked in over j bool locked[MAX][MAX]; // Each pair has a winner, loser typedef struct { int winner; int loser; } pair; // Array of candidates string candidates[MAX]; pair pairs[MAX * (MAX - 1) / 2]; int pair_count; int candidate_count; // Function prototypes bool vote(int rank, string name, int ranks[]); void record_preferences(int ranks[]); void add_pairs(void); void sort_pairs(void); void lock_pairs(void); void print_winner(void); bool is_circle(int start_winner, int loser); int main(int argc, string argv[]) { // Check for invalid usage if (argc \u003c 2) { printf(\"Usage: tideman [candidate ...]\\n\"); return 1; } // Populate array of candidates candidate_count = argc - 1; if (candidate_count \u003e MAX) { printf(\"Maximum number of candidates is %i\\n\", MAX); return 2; } for (int i = 0; i \u003c candidate_count; i++) { candidates[i] = argv[i + 1]; } // Clear graph of locked in pairs for (int i = 0; i \u003c candidate_count; i++) { for (int j = 0; j \u003c candidate_count; j++) { locked[i][j] = false; } } pair_count = 0; int voter_count = get_int(\"Number of voters: \"); // Query for votes for (int i = 0; i \u003c voter_count; i++) { // ranks[i] is voter's ith preference int ranks[candidate_count]; // Query for each rank for (int j = 0; j \u003c candidate_count; j++) { string name = get_string(\"Rank %i: \", j + 1); if (!vote(j, name, ranks)) { printf(\"Invalid vote.\\n\"); return 3; } } record_preferences(ranks); printf(\"\\n\"); } add_pairs(); sort_pairs(); lock_pairs(); print_winner(); return 0; } // Update ranks given a new vote bool vote(int rank, string name, int ranks[]) { for (int k = 0; k \u003c candidate_count; k++) { if (strcmp(candidates[k], name) == 0) { ranks[rank] = k; return true; } } return false; } // Update preferences given one voter's ranks void record_preferences(int ranks[]) { for (int j = 0; j \u003c candidate_count; j++) { for (int k = 0; k \u003c (candidate_count - j); k++) { preferences[ranks[j]][ranks[ j + k + 1]]++; } } return; } // Record pairs of candidates where one is preferred over the other void add_pairs(void) { for (int i = 0; i \u003c candidate_count; i++) { for (int j = 0; j \u003c candidate_count; j++) { if (i != j) { if (preferences[i][j] \u003e preferences[j][i]) { pairs[pair_count].winner = i; pairs[pair_count].loser = j; pair_count++; } } } } return; } // Sort pairs in decreasing order by strength of victory void sort_pairs(void) { for (int i = 0; i \u003c pair_count; i++) { for (int j = i + 1; j \u003c pair_count; j++) { if ((preferences[pairs[i].winner][pairs[i].loser]) \u003c (preferences[pairs[j].winner][pairs[j].loser])) { pair temp_pair; temp_pair.winner = pairs[i].winner; temp_pair.loser = pairs[i].loser; pairs[i].winner = pairs[j].winner; pairs[i].loser = pairs[j].loser; pairs[j].winner = temp_pair.winner; pairs[j].loser = temp_pair.loser; } } } return; } // Lock pairs into the candidate graph in order, without creating cycles void lock_pairs(void) { for (int i = 0; i \u003c pair_count; i++) { if (!is_circle(pairs[i].winner, pairs[i].loser)) { locked[pairs[i].winner][pairs[i].loser] = true; } } return; } // Print the winner of the election void print_winner(void) { int winner = -1; for (int i = 0; i \u003c candidate_count; i++) { for (int j = 0; j \u003c candidate_count; j++) { if (winner == -1 \u0026\u0026 locked[i][j]) { winner = i; } if (locked[i][j] \u0026\u0026 j == winner) { winner = i; } } } printf(\"%s\\n\", candidates[winner]); return; } bool is_circle(int start_winner, int loser) { if (loser == start_winner) { return true; } for (int i = 0; i \u003c candidate_count; i++) { if (locked[loser][i]) { if (is_circle(start_winner, i)) { return true; } } } return false; } ","date":"2020-10-03","objectID":"/2020/10/03/cs50-week3/:2:0","tags":["C","CS50"],"title":"CS50 2020 Week3: Algorithms Problem Answers","uri":"/2020/10/03/cs50-week3/"},{"categories":["CS50"],"content":"Readability #include \u003ccs50.h\u003e#include \u003cstdio.h\u003e#include \u003cctype.h\u003e#include \u003cstring.h\u003e#include \u003cmath.h\u003e int main(void) { string input = get_string(\"Text: \"); float letters = 0, words = 0, sentences = 0, index; int input_length = strlen(input); for (int i = 0; i \u003c input_length; i++) { if (isalpha(input[i]) != 0) { letters++; } else if (isspace(input[i])) { words++; } else if ((input[i]) == 46 || (input[i]) == 21 || (input[i]) == 63) { sentences++; } } words++; index = roundf(0.0588 * (letters / words) * 100 - 0.296 * (sentences / words) * 100 - 15.8); if (index \u003c= 1) { printf(\"Before Grade 1\\n\"); } else if (index \u003e= 2 \u0026\u0026 index \u003c= 15) { printf(\"Grade %i\\n\", (int)index); } else if (index \u003e= 16) { printf(\"Grade 16+\\n\"); } } ","date":"2020-10-03","objectID":"/2020/10/03/cs50-week2/:1:0","tags":["C","CS50"],"title":"CS50 2020 Week2: Arrays Problem Answers","uri":"/2020/10/03/cs50-week2/"},{"categories":["CS50"],"content":"Substitution #include \u003cstdio.h\u003e#include \u003ccs50.h\u003e#include \u003cstring.h\u003e#include \u003cctype.h\u003e int main(int argc, string argv[]) { if (argc != 2) { printf(\"Usage: ./substitution KEY\\n\"); return 1; } char key[26][2] = {{'a', '0'}, {'b', '0'}, {'c', '0'}, {'d', '0'}, {'e', '0'}, {'f', '0'}, {'g', '0'}, {'h', '0'}, {'i', '0'}, {'j', '0'}, {'k', '0'}, {'l', '0'}, {'m', '0'}, {'n', '0'}, {'o', '0'}, {'p', '0'}, {'q', '0'}, {'r', '0'}, {'s', '0'}, {'t', '0'}, {'u', '0'}, {'v', '0'}, {'w', '0'}, {'x', '0'}, {'y', '0'}, {'z', '0'} }; if (strlen(argv[1]) != 26) { printf(\"KEY must contain 26 characters.\\n\"); return 1; } for (int i = 0; i \u003c 26; i++) { if (isalpha(argv[1][i]) == 0) { printf(\"Key must only contain alphabetic characters.\\n\"); return 1; } for (int j = 0; j \u003c 26; j++) { if (key[j][1] == tolower(argv[1][i])) { printf(\"Key must not contain repeated characters.\\n\"); return 1; } } key[i][1] = tolower(argv[1][i]); } string s = get_string(\"plaintext: \"); for (int i = 0; i \u003c strlen(s); i++) { if (isupper(s[i])) { for (int j = 0; j \u003c 26; j++) { if (toupper(key[j][0]) == s[i]) { s[i] = toupper(key[j][1]); break; } } } if (islower(s[i])) { for (int j = 0; j \u003c 26; j++) { if ((key[j][0]) == s[i]) { s[i] = (key[j][1]); break; } } } } printf(\"ciphertext: %s\\n\", s); return 0; } ","date":"2020-10-03","objectID":"/2020/10/03/cs50-week2/:2:0","tags":["C","CS50"],"title":"CS50 2020 Week2: Arrays Problem Answers","uri":"/2020/10/03/cs50-week2/"},{"categories":["CS50"],"content":"mario #include \u003cstdio.h\u003e#include \u003ccs50.h\u003e int main(void) { int height = -1; while (height \u003e 8 || height \u003c 1) { height = get_int(\"Height: ? \"); } for (int i = 0, j = height - 1; i \u003c height; i++, j--) //i for height, j for space before each level { for (int k = 0; k \u003c 2; k++) //loop for right half and left half { if (k == 0) //for left half { if (j != 0) //if Height is one, skip output space before each level { for (int l = 0; l \u003c j; l++) //print space before each level { printf(\" \"); } } for (int m = 0; m \u003c= i; m++) //print left half # { printf(\"#\"); } printf(\" \"); //space between left half and right half } else { for (int m = 0; m \u003c= i; m++) //print right half # { printf(\"#\"); } } } printf(\"\\n\"); //new line before next level } } ","date":"2020-09-29","objectID":"/2020/09/29/cs50-week1/:1:0","tags":["C","CS50"],"title":"CS50 2020 Week1: C Problem Answers","uri":"/2020/09/29/cs50-week1/"},{"categories":["CS50"],"content":"credit #include \u003cstdio.h\u003e#include \u003ccs50.h\u003e int main(void) { long number = get_long(\"Number: \"), first_two; int digit = 0, chk1 = 0, chk2 = 0; //chk2 is second-to-last digit for (long i = number; i != 0;) { digit++; i /= 10; } for (long i = number; i \u003e= 100; i /= 10) { first_two = i / 10; } for (int i = 0; number != 0; i++) { if (i % 2 == 0) { chk1 += number % 10; number /= 10; } else { int temp = number % 10 * 2; chk2 += temp / 10; chk2 += temp % 10; number /= 10; } } if ((chk1 + chk2) % 10 != 0) { printf(\"INVALID\\n\"); } else { if (first_two == 34 || first_two == 37) { if (digit == 15) { printf(\"AMEX\\n\"); } else { printf(\"INVALID\\n\"); } } else if (first_two \u003e= 51 \u0026\u0026 first_two \u003c= 55) { if (digit == 16) { printf(\"MASTERCARD\\n\"); } else { printf(\"INVALID\\n\"); } } else if (first_two / 10 == 4) { if (digit == 16 || digit == 13) { printf(\"VISA\\n\"); } else { printf(\"INVALID\\n\"); } } else { printf(\"INVALID\\n\"); } } } ","date":"2020-09-29","objectID":"/2020/09/29/cs50-week1/:2:0","tags":["C","CS50"],"title":"CS50 2020 Week1: C Problem Answers","uri":"/2020/09/29/cs50-week1/"},{"categories":["Rails"],"content":"什麼是CI？ 偷偷用一下Gitlab CI/CD的文件 結束 簡單來說，CI(Continuous Integration, 持續整合)可以幫你自動化push一個新分支到Github等網站後的步驟 以Rails程式來說，至少有跑測試(RSpec)這個步驟 CD(Continuous Delivery, 持續交付),可以幫你自動化新分支merge到主分支後需要執行的步驟。 以Rails等程式來說，至少有部署這個步驟 ","date":"2020-09-17","objectID":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/:1:0","tags":["Rails","PostgreSQL","Travis-CI","Github"],"title":"在Rails專案設定Travis-CI或Github action","uri":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/"},{"categories":["Rails"],"content":"怎麼設定？ 以一個存放在Github的專案，部署在Heroku伺服器上的網路應用程式來說。 如果只要符合最少CI/CD的步驟 CI： 這裡會示範Travis-CI和Github action這兩個工具 CD： 在Heroku中，鏈接到Github之後就可以設定自動部署了 以下會用一個，使用Postgresql資料庫，以Webpack做為打包工具的Rails6應用，示範Travis-CI和Github action的設定要怎麼寫 ","date":"2020-09-17","objectID":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/:2:0","tags":["Rails","PostgreSQL","Travis-CI","Github"],"title":"在Rails專案設定Travis-CI或Github action","uri":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/"},{"categories":["Rails"],"content":"為什麼需要設定？ 我們可以試著回想一下，在一個全新的電腦上，如果需要把一個Rails的Rspec測試跑起來，需要什麼步驟？ 安裝Ubuntu 安裝Ruby 安裝Postgresql資料庫 安裝Node bundle安裝Ruby gems yarn安裝node modules 跑rspec 因為在Travis-CI或Github action執行時，就等於是在一台新電腦上執行。 所以這些步驟都需要寫在一個檔案中，告訴Travis-CI或Github action怎麼設定和執行 ","date":"2020-09-17","objectID":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/:3:0","tags":["Rails","PostgreSQL","Travis-CI","Github"],"title":"在Rails專案設定Travis-CI或Github action","uri":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/"},{"categories":["Rails"],"content":"Travis-CI Travis-CI的設定檔在專案根目錄的.travis.yml os:linuxdist:bioniclanguage:rubycache:- bundler- yarnservices:- postgresqlbefore_install:- nvm install --ltsbefore_script:- bundle install --jobs=3 --retry=3- yarn- bundle exec rake db:create- bundle exec rake db:schema:loadscript:- bundle exec rspec os設定作業系統 dist設定Linux發行版 cache設定那些資料需要被快取暫存 services設定需要的服務 before_install需要另外安裝的程式 before_script執行script前執行的指令 script執行script ","date":"2020-09-17","objectID":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/:4:0","tags":["Rails","PostgreSQL","Travis-CI","Github"],"title":"在Rails專案設定Travis-CI或Github action","uri":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/"},{"categories":["Rails"],"content":"Github Action Github action的設定檔在專案.github/workflows資料夾中YAML設定檔(檔名不限) 參考來源 name:RSpecon:[push]jobs:test:runs-on:ubuntu-latest# if: \"!contains(github.event.head_commit.message, 'ci skip')\"services:postgres:image:postgres:12env:POSTGRES_PASSWORD:postgresoptions:\u003e- --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5 ports: - 5432:5432 steps: - uses: actions/checkout@v2 - name: Set up Ruby uses: ruby/setup-ruby@v1 # with: # ruby-version: 2.7.1 # Not needed with a .ruby-version file - name: Setup Node # delete this step will use node v12 uses: actions/setup-node@v1 with: node-version: 14 - name: Cache gems uses: actions/cache@v2 with: path: vendor/bundle key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }} restore-keys: | ${{ runner.os }}-gem- - name: Cache node modules uses: actions/cache@v2 with: path: node_modules key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }} restore-keys: | ${{ runner.os }}-node- - name: Install dependencies run: | gem install bundler bundle install --path vendor/bundle --without production yarn install - name: Set env run: | echo '::set-env name=RAILS_ENV::test' echo '::set-env name=DATABASE_URL::postgres://postgres:postgres@localhost:5432/' - name: setup DB run: | bundle exec rails db:create bundle exec rails db:schema:load - name: Run tests run: bundle exec rspec name設定顯示在Action中的名稱 on設定底下Job觸發條件 job:test: 設定job名稱 runs-on設定機器的作業系統 services設定需要的服務 env:POSTGRES_PASSWORD:postgres 設定環境變數，以設定資料庫的使用者密碼 setps設定各個步驟，可以使用現有的action或執行指令 - name:Set up Rubyuses:ruby/setup-ruby@v1# with:# ruby-version: 2.7.1 # Not needed with a .ruby-version file 設定安裝Ruby，不設定版本會從.ruby-version讀取 - name:Setup Node # delete this step will use node v12uses:actions/setup-node@v1with:node-version:14 設定安裝Node，沒有這一步驟的話會用Node V12 - name:Cache gemsuses:actions/cache@v2with:path:vendor/bundlekey:${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}restore-keys:| ${{ runner.os }}-gem-- name:Cache node modulesuses:actions/cache@v2with:path:node_moduleskey:${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}restore-keys:| ${{ runner.os }}-node- 設定哪些資料需要被快取 - name:Install dependenciesrun:| gem install bundler bundle install --path vendor/bundle --without production yarn install 安裝gem，安裝node modules - name:Set envrun:| echo '::set-env name=RAILS_ENV::test' echo '::set-env name=DATABASE_URL::postgres://postgres:postgres@localhost:5432/' 設定環境變數，RAILS_ENV，DATABASE_URL - name:setup DBrun:| bundle exec rails db:create bundle exec rails db:schema:load 初始化資料庫 - name:Run testsrun:bundle exec rspec 執行測試 ","date":"2020-09-17","objectID":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/:5:0","tags":["Rails","PostgreSQL","Travis-CI","Github"],"title":"在Rails專案設定Travis-CI或Github action","uri":"/2020/09/17/setup-travis-ci-or-github-action-for-a-rails-application-to-run-rspec-test-on-github/"},{"categories":["Rails"],"content":"簡單，但是有些小地方要注意… 最近在寫一些練習的小專案，沒想到在設定Webpacker這個步驟卡了很久 所以打算把設定的步驟自己寫下來避免下次又忘了 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:0:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Webpack \u0026 Webpacker Webpack是一個靜態模組打包工具，幫你把有複雜依賴關係的js, css, scss…打包成靜態的檔案 Webpacker是一個Ruby gem，讓我們在Rails可以方便的使用Webpack處理Webpack可以處理的檔案 以下範例再建立一個Rails專案後，建立一個controller和一個view，並且設定Webpacker引用Bootstrap的CSS和JS到view裡 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:1:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"建立專案 Ruby的版本是2.7.1 Rails的版本是6.0.3.3 首先輸入以下命令開新專案 rails new webpack_example 接下來generate只有一個action的controller，記得先cd進去 ❯ rails g controller page index Running via Spring preloader in process 50838 create app/controllers/page_controller.rb route get 'page/index' invoke erb create app/views/page create app/views/page/index.html.erb invoke test_unit create test/controllers/page_controller_test.rb invoke helper create app/helpers/page_helper.rb invoke test_unit invoke assets invoke scss create app/assets/stylesheets/page.scss 打開config/routes.rb改成以下內容 Rails.application.routes.draw do root 'page#index' end 打開app/views/page/index.html.erb貼上以下Bootstrap Navbar的範例code \u003cnav class=\"navbar navbar-expand-lg navbar-light bg-light\"\u003e \u003ca class=\"navbar-brand\" href=\"#\"\u003eNavbar\u003c/a\u003e \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\u003e \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e \u003c/button\u003e \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e \u003cul class=\"navbar-nav mr-auto\"\u003e \u003cli class=\"nav-item active\"\u003e \u003ca class=\"nav-link\" href=\"#\"\u003eHome \u003cspan class=\"sr-only\"\u003e(current)\u003c/span\u003e\u003c/a\u003e \u003c/li\u003e \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"#\"\u003eLink\u003c/a\u003e \u003c/li\u003e \u003cli class=\"nav-item dropdown\"\u003e \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e Dropdown \u003c/a\u003e \u003cdiv class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\"\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eAction\u003c/a\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eAnother action\u003c/a\u003e \u003cdiv class=\"dropdown-divider\"\u003e\u003c/div\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eSomething else here\u003c/a\u003e \u003c/div\u003e \u003c/li\u003e \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link disabled\" href=\"#\"\u003eDisabled\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003cform class=\"form-inline my-2 my-lg-0\"\u003e \u003cinput class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\u003e \u003cbutton class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"\u003eSearch\u003c/button\u003e \u003c/form\u003e \u003c/div\u003e \u003c/nav\u003e 最後輸入以下命令啟動Rails伺服器後，打開瀏覽器輸入網址http://localhost:3000/就可以看到沒有JS也沒有CSS的Navbar了 rails s ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:2:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"升級Webpacker 目前Rails使用的Webpacker還是4.3版，目前已經有V5的版本可以使用 打開專案的Gemfile，把Webpacker的版本改為以下 gem 'webpacker', '~\u003e 5.2', '\u003e= 5.2.1' 改完之後記得執行bundle套用版本升級 接下來執行yarn upgrade @rails/webpacker --latest命令升級node module裡的檔案。也可以使用yarn upgrade @rails/webpacker@5.2.1指定版本升級，但是這兩個目前是一樣的 Webpacker Git上升級的說明 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:3:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"安裝與設定Bootsrap 執行yarn add bootstrap jquery popper.js從yarnpkg安裝Boorstrap和Bootstrap裡JS所依賴的jQuery, popper.js 接下來要利用Webpack的ProvidePlugin功能把jQuery, popper.js自動載入到各個JS裡，就不用在JS檔裡寫import $ from 'jquery' 打開config/webpack/environment.js，改成以下內容 $: 'jquery/src/jquery'的寫法可以在rails-ujs中也能使用jQuery const { environment } = require('@rails/webpacker') const webpack = require('webpack') environment.plugins.prepend('Provide', new webpack.ProvidePlugin({ $: 'jquery/src/jquery', jQuery: 'jquery/src/jquery', Popper: ['popper.js', 'default'] }) ) module.exports = environment 打開app/javascript/packs/application.js，加入以下程式碼 import 'bootstrap' import 'bootstrap/scss/bootstrap.scss' 打開app/views/layouts/application.html.erb，把\u003c%= stylesheet_link_tag 'application', ... %\u003e那行改成以下 \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e 最後再執行rails s，就可以在瀏覽器看到精美的Bootstrap Navbar🎉 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:4:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Webpack打包CSS和JS邏輯 在Webpacker設定下，Webpack打包時會進行以下步驟 到app/javascript/packs尋找JS或SCSS檔案，作為entry point，並依據JS檔裡面的import 'libary'或SCSS檔裡面的@import 'style.scss';建立各檔案間的依賴性 除了在JS裡import JS，你也可以在JS import SCSS, CSS import檔案時，從資料夾名稱開始寫的話，會從node_module資料夾中開始找 另外Webpack V5的新功能Importing CSS as a multi-file pack，可以直接在packs資料夾建立同名的JS和SCSS檔不會有問題 依據entry point的檔名，打包出同名的JS檔或CSS檔。SCSS檔打包出CSS檔，JS檔打包出JS和CSS檔（如果有import CSS或SCSS） 使用時，在html.erb使用\u003c%= stylesheet_pack_tag 'entry_point' %\u003e載入打包後的CSS檔，使用\u003c%= javascript_pack_tag 'entry_point' %\u003e載入打包後的JS檔 如果在entry point同時引用JS和SCSS檔，記得要分別載入CSS和JS(stylesheet_pack_tag \u0026 javascript_pack_tag) ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:5:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Production環境會遇到的問題 讓我們用rails s -e=production命令啟動production環境的伺服器。然後網站就出錯了 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"assets:precompile 打開log/production.log會看到以下錯誤訊息 ActionView::Template::Error (Webpacker can't find application.css in /home/jasonj/webpack_example/public/packs/manifest.json. Possible causes: 1. You want to set webpacker.yml value of compile to true for your environment unless you are using the `webpack -w` or the webpack-dev-server. 2. webpack has not yet re-run to reflect updates. 3. You have misconfigured Webpacker's config/webpacker.yml file. 4. Your webpack configuration is not creating a manifest. Your manifest contains: { \"application.js\": \"/packs/js/application-9317054a6fa2affa21c0.js\", \"application.js.map\": \"/packs/js/application-9317054a6fa2affa21c0.js.map\", \"entrypoints\": { \"application\": { \"js\": [ \"/packs/js/application-9317054a6fa2affa21c0.js\" ], \"js.map\": [ \"/packs/js/application-9317054a6fa2affa21c0.js.map\" ] } } } ): [3ac03c58-2f45-46f3-8997-611527716d59] 5: \u003c%= csrf_meta_tags %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 6: \u003c%= csp_meta_tag %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 7: [3ac03c58-2f45-46f3-8997-611527716d59] 8: \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 9: \u003c%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 10: \u003c/head\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 11: [3ac03c58-2f45-46f3-8997-611527716d59] [3ac03c58-2f45-46f3-8997-611527716d59] app/views/layouts/application.html.erb:8 I, 簡單來說，就是在erb檔用了stylesheet_pack_tag和javascript_pack_tag，但是webpacker說找不到打包出來到CSS和JS檔 要產生production環境用的CSS和JS檔，需要先執行以下命令 RAILS_ENV=production rails assets:precompile 之後檢查public/packs/css和public/packs/js裡，就會有打包出來的檔案 在部署的時候，應該執行rails assets:precompile就好，RAILS_ENV=production應該會先設定在伺服器的環境變數中 部署在Heroku的話，應該會自動執行這一步的樣子 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:1","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"RAILS_SERVE_STATIC_FILES 接下來再打開伺服器，怎麼又變成沒有引用CSS和JS的畫面了？ 讓我們打開log看看 [2020-09-16T02:02:18.644064 #9016] INFO -- : [87560b92-483f-43e3-a8eb-3089cb8fca12] Started GET \"/packs/css/application-c6751772.css\" for 127.0.0.1 at 2020-09-16 02:02:18 +0800 F, [2020-09-16T02:02:18.644927 #9016] FATAL -- : [87560b92-483f-43e3-a8eb-3089cb8fca12] [87560b92-483f-43e3-a8eb-3089cb8fca12] ActionController::RoutingError (No route matches [GET] \"/packs/css/application-c6751772.css\"): ... ... ... [2020-09-16T02:02:18.667339 #9016] INFO -- : [ef022040-9dd8-424b-beb7-ebaed172e8d0] Started GET \"/packs/js/application-473b44d61307cd2ab54d.js\" for 127.0.0.1 at 2020-09-16 02:02:18 +0800 F, [2020-09-16T02:02:18.668101 #9016] FATAL -- : [ef022040-9dd8-424b-beb7-ebaed172e8d0] [ef022040-9dd8-424b-beb7-ebaed172e8d0] ActionController::RoutingError (No route matches [GET] \"/packs/js/application-473b44d61307cd2ab54d.js\"): 原來是瀏覽器要求CSS和JS時，被Rails擋下來了 在config/environments/production.rb中 # Disable serving static files from the `/public` folder by default since # Apache or NGINX already handles this. config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present? 一般部署Rails時，會搭配Apache或NGINX使用，處理public資料夾裡的靜態檔案 所以如果沒有使用以上軟體，要使用以下命令啟動伺服器， RAILS_SERVE_STATIC_FILES=true rails s -e=production 在部署時，要把RAILS_SERVE_STATIC_FILES=true加入環境變數中 部署在Heroku時需要設定這個環境變數 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:2","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"webpack-dev-server 請領班幫忙 開發時，同時執行webpack-dev-server，可以加快CSS或JS檔重新載入的速度 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:7:0","tags":["Rails","Webpack","Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Linux"],"content":"用途 一般來說，如果在安裝Windows之後再安裝Ubuntu或Manjaro這些可以自動安裝的Linux，開機時應該就會出現GRUB的選單可以選擇要進入Windows或Linux。也可以在BIOS中設定預設要進入的系統。 但是在某些筆記型電腦上，只有安裝一顆硬碟時，就算在BIOS中選擇Linux作為預設值，開機時還是會進入Windows。 唯一可以設定Linux作為預設開機的解決方式。是把Windows的開機efi檔更名，再把Linux(GRUB)的開機efi檔複製一份到原來Windows開機efi的相同位置。這樣就算是系統執行的是Windows的efi檔，還是可以照我們想要的從Linux開機。另外還要更新Linux多重開機管理程式GRUB設定檔中Windows的efi檔位置，這樣才可以在GRUB選單中正確啟動Windows。 但是，在做完這些設定後，Windows更新時有機會重設Windows的開機efi。有時候Linux更新Kernel的時候，也會重設GRUB的設定檔。所以這些時候就要重複上面這些設定。 這個shell script就是將上面這些步驟自動化。 ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:1:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"Script ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:2:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"使用方法 把上面code複製一份到想存放的目錄中 chmod 讓檔案變成可以執行 chmod +x grub.sh 執行 ./grub.sh ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:3:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"Yay - Aur helper in Arch linux and Manjaro 雖然Manjaro有內建Pamac來管理系統上的軟體，但是以我的使用經驗來說，Commamd Line的工具用起來還是比較少錯誤。我使用的程式是Yay，可以順便管理透過AUR安裝的程式。 ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"設定安裝程式時使用的鏡像站伺服器(mirror server) 正確的設定可以在安裝或更新程式的時候，提高下載的速度 pacman-mirrors --country Taiwan ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:1","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"設定Yay選項的預設值 設定這些選項預設值可以在更新AUR上程式的時候，避免過程被中斷 yay --nocleanmenu --nodiffmenu --noeditmenu --save ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:2","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"Chrome的語言設定 為了在使用Manjaro遇到問題時，可以找到更多問題的解答。我的系統語言時設定成英文。 Chrome預設的語言會使用系統設定，但是這樣會影響一些網站的語言，所以需要另外設定Chrome的語言。 解答 In your /usr/share/applications/google-chrome.desktop change the “exec” command to something like this: sh -c \"LANGUAGE=zh_TW /usr/bin/google-chrome-stable %U\" ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:2:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"Rime - 中文輸入法 待更新… ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:3:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Blog"],"content":"開工測試 Finally!!! ","date":"2020-03-11","objectID":"/2020/03/11/first-post/:0:0","tags":["Hugo"],"title":"First Post","uri":"/2020/03/11/first-post/"}]