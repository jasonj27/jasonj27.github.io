[{"categories":["Rails"],"content":"簡單，但是有些小地方要注意… 最近在寫一些練習的小專案，沒想到在設定Webpacker這個步驟卡了很久 所以打算把設定的步驟自己寫下來避免下次又忘了 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:0:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Webpack \u0026 Webpacker Webpack是一個靜態模組打包工具，幫你把有複雜依賴關係的js, css, scss…打包成靜態的檔案 Webpacker是一個Ruby gem，讓我們在Rails可以方便的使用Webpack處理Webpack可以處理的檔案 以下範例再建立一個Rails專案後，建立一個controller和一個view，並且設定Webpacker引用Bootstrap的CSS和JS到view裡 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:1:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"建立專案 Ruby的版本是2.7.1 Rails的版本是6.0.3.3 首先輸入以下命令開新專案 rails new webpack_example 接下來generate只有一個action的controller，記得先cd進去 ❯ rails g controller page index Running via Spring preloader in process 50838 create app/controllers/page_controller.rb route get 'page/index' invoke erb create app/views/page create app/views/page/index.html.erb invoke test_unit create test/controllers/page_controller_test.rb invoke helper create app/helpers/page_helper.rb invoke test_unit invoke assets invoke scss create app/assets/stylesheets/page.scss 打開config/routes.rb改成以下內容 Rails.application.routes.draw do root 'page#index' end 打開app/views/page/index.html.erb貼上以下Bootstrap Navbar的範例code \u003cnav class=\"navbar navbar-expand-lg navbar-light bg-light\"\u003e \u003ca class=\"navbar-brand\" href=\"#\"\u003eNavbar\u003c/a\u003e \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\u003e \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e \u003c/button\u003e \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e \u003cul class=\"navbar-nav mr-auto\"\u003e \u003cli class=\"nav-item active\"\u003e \u003ca class=\"nav-link\" href=\"#\"\u003eHome \u003cspan class=\"sr-only\"\u003e(current)\u003c/span\u003e\u003c/a\u003e \u003c/li\u003e \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"#\"\u003eLink\u003c/a\u003e \u003c/li\u003e \u003cli class=\"nav-item dropdown\"\u003e \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e Dropdown \u003c/a\u003e \u003cdiv class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\"\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eAction\u003c/a\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eAnother action\u003c/a\u003e \u003cdiv class=\"dropdown-divider\"\u003e\u003c/div\u003e \u003ca class=\"dropdown-item\" href=\"#\"\u003eSomething else here\u003c/a\u003e \u003c/div\u003e \u003c/li\u003e \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link disabled\" href=\"#\"\u003eDisabled\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003cform class=\"form-inline my-2 my-lg-0\"\u003e \u003cinput class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\u003e \u003cbutton class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"\u003eSearch\u003c/button\u003e \u003c/form\u003e \u003c/div\u003e \u003c/nav\u003e 最後輸入以下命令啟動Rails伺服器後，打開瀏覽器輸入網址http://localhost:3000/就可以看到沒有JS也沒有CSS的Navbar了 rails s ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:2:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"升級Webpacker 目前Rails使用的Webpacker還是4.3版，目前已經有V5的版本可以使用 打開專案的Gemfile，把Webpacker的版本改為以下 gem 'webpacker', '~\u003e 5.2', '\u003e= 5.2.1' 改完之後記得執行bundle套用版本升級 接下來執行yarn upgrade @rails/webpacker --latest命令升級node module裡的檔案。也可以使用yarn upgrade @rails/webpacker@5.2.1指定版本升級，但是這兩個目前是一樣的 Webpacker Git上升級的說明 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:3:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"安裝與設定Bootsrap 執行yarn add bootstrap jquery popper.js從yarnpkg安裝Boorstrap和Bootstrap裡JS所依賴的jQuery, popper.js 接下來要利用Webpack的ProvidePlugin功能把jQuery, popper.js自動載入到各個JS裡，就不用在JS檔裡寫import $ from 'jquery' 打開config/webpack/environment.js，改成以下內容 $: 'jquery/src/jquery'的寫法可以在rails-ujs中也能使用jQuery const { environment } = require('@rails/webpacker') const webpack = require('webpack') environment.plugins.prepend('Provide', new webpack.ProvidePlugin({ $: 'jquery/src/jquery', jQuery: 'jquery/src/jquery', Popper: ['popper.js', 'default'] }) ) module.exports = environment 打開app/javascript/packs/application.js，加入以下程式碼 import 'bootstrap' import 'bootstrap/scss/bootstrap.scss' 打開app/views/layouts/application.html.erb，把\u003c%= stylesheet_link_tag 'application', ... %\u003e那行改成以下 \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e 最後再執行rails s，就可以在瀏覽器看到精美的Bootstrap Navbar🎉 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:4:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Webpack打包CSS和JS邏輯 在Webpacker設定下，Webpack打包時會進行以下步驟 到app/javascript/packs尋找JS或SCSS檔案，作為entry point，並依據JS檔裡面的import 'libary'或SCSS檔裡面的@import 'style.scss';建立各檔案間的依賴性 除了在JS裡import JS，你也可以在JS import SCSS, CSS import檔案時，從資料夾名稱開始寫的話，會從node_module資料夾中開始找 另外Webpack V5的新功能Importing CSS as a multi-file pack，可以直接在packs資料夾建立同名的JS和SCSS檔不會有問題 依據entry point的檔名，打包出同名的JS檔或CSS檔。SCSS檔打包出CSS檔，JS檔打包出JS和CSS檔（如果有import CSS或SCSS） 使用時，在html.erb使用\u003c%= stylesheet_pack_tag 'entry_point' %\u003e載入打包後的CSS檔，使用\u003c%= javascript_pack_tag 'entry_point' %\u003e載入打包後的JS檔 如果在entry point同時引用JS和SCSS檔，記得要分別載入CSS和JS(stylesheet_pack_tag \u0026 javascript_pack_tag) ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:5:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"Production環境會遇到的問題 讓我們用rails s -e=production命令啟動production環境的伺服器。然後網站就出錯了 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"assets:precompile 打開log/production.log會看到以下錯誤訊息 ActionView::Template::Error (Webpacker can't find application.css in /home/jasonj/webpack_example/public/packs/manifest.json. Possible causes: 1. You want to set webpacker.yml value of compile to true for your environment unless you are using the `webpack -w` or the webpack-dev-server. 2. webpack has not yet re-run to reflect updates. 3. You have misconfigured Webpacker's config/webpacker.yml file. 4. Your webpack configuration is not creating a manifest. Your manifest contains: { \"application.js\": \"/packs/js/application-9317054a6fa2affa21c0.js\", \"application.js.map\": \"/packs/js/application-9317054a6fa2affa21c0.js.map\", \"entrypoints\": { \"application\": { \"js\": [ \"/packs/js/application-9317054a6fa2affa21c0.js\" ], \"js.map\": [ \"/packs/js/application-9317054a6fa2affa21c0.js.map\" ] } } } ): [3ac03c58-2f45-46f3-8997-611527716d59] 5: \u003c%= csrf_meta_tags %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 6: \u003c%= csp_meta_tag %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 7: [3ac03c58-2f45-46f3-8997-611527716d59] 8: \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 9: \u003c%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 10: \u003c/head\u003e [3ac03c58-2f45-46f3-8997-611527716d59] 11: [3ac03c58-2f45-46f3-8997-611527716d59] [3ac03c58-2f45-46f3-8997-611527716d59] app/views/layouts/application.html.erb:8 I, 簡單來說，就是在erb檔用了stylesheet_pack_tag和javascript_pack_tag，但是webpacker說找不到打包出來到CSS和JS檔 要產生production環境用的CSS和JS檔，需要先執行以下命令 RAILS_ENV=production rails assets:precompile 之後檢查public/packs/css和public/packs/js裡，就會有打包出來的檔案 在部署的時候，應該執行rails assets:precompile就好，RAILS_ENV=production應該會先設定在伺服器的環境變數中 部署在Heroku的話，應該會自動執行這一步的樣子 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:1","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"RAILS_SERVE_STATIC_FILES 接下來再打開伺服器，怎麼又變成沒有引用CSS和JS的畫面了？ 讓我們打開log看看 [2020-09-16T02:02:18.644064 #9016] INFO -- : [87560b92-483f-43e3-a8eb-3089cb8fca12] Started GET \"/packs/css/application-c6751772.css\" for 127.0.0.1 at 2020-09-16 02:02:18 +0800 F, [2020-09-16T02:02:18.644927 #9016] FATAL -- : [87560b92-483f-43e3-a8eb-3089cb8fca12] [87560b92-483f-43e3-a8eb-3089cb8fca12] ActionController::RoutingError (No route matches [GET] \"/packs/css/application-c6751772.css\"): ... ... ... [2020-09-16T02:02:18.667339 #9016] INFO -- : [ef022040-9dd8-424b-beb7-ebaed172e8d0] Started GET \"/packs/js/application-473b44d61307cd2ab54d.js\" for 127.0.0.1 at 2020-09-16 02:02:18 +0800 F, [2020-09-16T02:02:18.668101 #9016] FATAL -- : [ef022040-9dd8-424b-beb7-ebaed172e8d0] [ef022040-9dd8-424b-beb7-ebaed172e8d0] ActionController::RoutingError (No route matches [GET] \"/packs/js/application-473b44d61307cd2ab54d.js\"): 原來是瀏覽器要求CSS和JS時，被Rails擋下來了 在config/environments/production.rb中 # Disable serving static files from the `/public` folder by default since # Apache or NGINX already handles this. config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present? 一般部署Rails時，會搭配Apache或NGINX使用，處理public資料夾裡的靜態檔案 所以如果沒有使用以上軟體，要使用以下命令啟動伺服器， RAILS_SERVE_STATIC_FILES=true rails s -e=production 在部署時，要把RAILS_SERVE_STATIC_FILES=true加入環境變數中 部署在Heroku時需要設定這個環境變數 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:6:2","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Rails"],"content":"webpack-dev-server 請領班幫忙 開發時，同時執行webpack-dev-server，可以加快CSS或JS檔重新載入的速度 ","date":"2020-09-15","objectID":"/2020/09/15/how-to-use-webpack-with-rails/:7:0","tags":["Rails, Webpack, Webpacker"],"title":"如何在Rails裡使用Webpack?","uri":"/2020/09/15/how-to-use-webpack-with-rails/"},{"categories":["Linux"],"content":"用途 一般來說，如果在安裝Windows之後再安裝Ubuntu或Manjaro這些可以自動安裝的Linux，開機時應該就會出現GRUB的選單可以選擇要進入Windows或Linux。也可以在BIOS中設定預設要進入的系統。 但是在某些筆記型電腦上，只有安裝一顆硬碟時，就算在BIOS中選擇Linux作為預設值，開機時還是會進入Windows。 唯一可以設定Linux作為預設開機的解決方式。是把Windows的開機efi檔更名，再把Linux(GRUB)的開機efi檔複製一份到原來Windows開機efi的相同位置。這樣就算是系統執行的是Windows的efi檔，還是可以照我們想要的從Linux開機。另外還要更新Linux多重開機管理程式GRUB設定檔中Windows的efi檔位置，這樣才可以在GRUB選單中正確啟動Windows。 但是，在做完這些設定後，Windows更新時有機會重設Windows的開機efi。有時候Linux更新Kernel的時候，也會重設GRUB的設定檔。所以這些時候就要重複上面這些設定。 這個shell script就是將上面這些步驟自動化。 ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:1:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"Script ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:2:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"使用方法 把上面code複製一份到想存放的目錄中 chmod 讓檔案變成可以執行 chmod +x grub.sh 執行 ./grub.sh ","date":"2020-09-09","objectID":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/:3:0","tags":["GRUB"],"title":"更新雙重開機(Windows, Linux)設定的shell script","uri":"/2020/09/09/shell-script-for-update-grub.cfg-and-more/"},{"categories":["Linux"],"content":"Yay - Aur helper in Arch linux and Manjaro 雖然Manjaro有內建Pamac來管理系統上的軟體，但是以我的使用經驗來說，Commamd Line的工具用起來還是比較少錯誤。我使用的程式是Yay，可以順便管理透過AUR安裝的程式。 ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"設定安裝程式時使用的鏡像站伺服器(mirror server) 正確的設定可以在安裝或更新程式的時候，提高下載的速度 pacman-mirrors --country Taiwan ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:1","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"設定Yay選項的預設值 設定這些選項預設值可以在更新AUR上程式的時候，避免過程被中斷 yay --nocleanmenu --nodiffmenu --noeditmenu --save ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:1:2","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"Chrome的語言設定 為了在使用Manjaro遇到問題時，可以找到更多問題的解答。我的系統語言時設定成英文。 Chrome預設的語言會使用系統設定，但是這樣會影響一些網站的語言，所以需要另外設定Chrome的語言。 解答 In your /usr/share/applications/google-chrome.desktop change the “exec” command to something like this: sh -c \"LANGUAGE=zh_TW /usr/bin/google-chrome-stable %U\" ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:2:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Linux"],"content":"Rime - 中文輸入法 待更新… ","date":"2020-09-09","objectID":"/2020/09/09/my-tips-of-using-manjaro/:3:0","tags":["Manjaro"],"title":"使用Manjaro linux 的小訣竅","uri":"/2020/09/09/my-tips-of-using-manjaro/"},{"categories":["Blog"],"content":"開工測試 Finally!!! ","date":"2020-03-11","objectID":"/2020/03/11/first-post/:0:0","tags":["Hugo"],"title":"First Post","uri":"/2020/03/11/first-post/"}]